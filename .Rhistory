metaFP <- "parkinsons_metadata.tsv"
meta <- read_delim(metaFP, delim="\t")
otuFP <- "feature-table.txt"
otu <- read_delim(file=otuFP, delim="\t", skip=1)
taxfp <- "taxonomy.tsv"
tax <- read_delim(taxfp, delim="\t")
# Load in the 'phyloseq', 'tidyverse', and 'ape' package
library(phyloseq)
library(ape)
library(tidyverse)
library(vegan)
library(picante)
# Load in the 'phyloseq', 'tidyverse', and 'ape' package
library(phyloseq)
library(ape)
library(tidyverse)
library(vegan)
library(picante)
#Load in the pd mouse metadata,  OTU table, taxonomy file, and phylogenetic tree
metaFP <- "parkinsons_metadata.tsv"
meta <- read_delim(metaFP, delim="\t")
# Load in the 'phyloseq', 'tidyverse', and 'ape' package
library(phyloseq)
library(ape)
library(tidyverse)
library(vegan)
library(picante)
#Load in the pd mouse metadata,  OTU table, taxonomy file, and phylogenetic tree
metaFP <- "parkinsons_metadata.txt"
meta <- read_delim(metaFP, delim="\t")
otuFP <- "feature-table.txt"
otu <- read_delim(file=otuFP, delim="\t", skip=1)
taxfp <- "taxonomy.tsv"
tax <- read_delim(taxfp, delim="\t")
phylotreefp <- "tree.nwk"
phylotree <- read.tree(phylotreefp)
View(meta)
otu_mat <- as.matrix(otu[,-1])
# Make #OTU ID as the first column of the newly created matrix
rownames(otu_mat) <- otu$`#OTU ID`
# Use the "otu_table" function to make an OTU table
OTU <- otu_table(otu_mat, taxa_are_rows = TRUE)
class(OTU)
View(otu_mat)
sample_df <- as.data.frame(meta[,-1])
# Make sample_name the rownames
rownames(sample_df) <- meta$`sample_name`
# Make phyloseq sample data with sample_data() function
SAMP <- sample_data(sample_df)
class(SAMP)
View(SAMP)
tax_sep <- tax %>% select(-Confidence)%>%
separate(col=Taxon, sep="; "
, into = c("Domain","Phylum","Class","Order","Family","Genus","Species")) %>%
as.matrix() # Saving as a matrix
tax_sep <- tax %>% select(-Confidence)%>%
separate(col=Taxon, sep="; "
, into = c("Domain","Phylum","Class","Order","Family","Genus","Species")) %>%
as.matrix() # Saving as a matrix
View(tax_sep)
tax_df<- tax_sep[,-1]
# Make sampleids the rownames
rownames(tax_df) <- tax$`Feature ID`
# Make taxa table
TAX <- tax_table(tax_df)
class(TAX)
View(tax_df)
mouse_tutorial <- phyloseq(OTU, SAMP, TAX, phylotree)
View(sample_df)
View(meta)
# Load in the 'phyloseq', 'tidyverse', and 'ape' package
library(phyloseq)
library(ape)
library(tidyverse)
library(vegan)
library(picante)
#Load in the pd mouse metadata,  OTU table, taxonomy file, and phylogenetic tree
metaFP <- "parkinsons_metadata.txt"
meta <- read_delim(metaFP, delim="\t")
otuFP <- "feature-table.txt"
otu <- read_delim(file=otuFP, delim="\t", skip=1)
taxfp <- "taxonomy.tsv"
tax <- read_delim(taxfp, delim="\t")
phylotreefp <- "tree.nwk"
phylotree <- read.tree(phylotreefp)
#_____________________________________________________
# Reformatting the otu table to OTU phyloseq object
# Remove the first indexing column and save into a matrix
otu_mat <- as.matrix(otu[,-1])
# Make #OTU ID as the first column of the newly created matrix
rownames(otu_mat) <- otu$`#OTU ID`
# Use the "otu_table" function to make an OTU table
OTU <- otu_table(otu_mat, taxa_are_rows = TRUE)
class(OTU)
#_____________________________________________________
# Reformatting the meta table to SAMP phyloseq object
# Remove the first column and save into a new datafrome
sample_df <- as.data.frame(meta[,-1])
# Make #SampleID the rownames
rownames(sample_df) <- meta$`#SampleID`
# Make phyloseq sample data with sample_data() function
SAMP <- sample_data(sample_df)
class(SAMP)
#_____________________________________________________
# Separate the taxa rank columns
tax_sep <- tax %>% select(-Confidence)%>%
separate(col=Taxon, sep="; "
, into = c("Domain","Phylum","Class","Order","Family","Genus","Species")) %>%
as.matrix() # Saving as a matrix
# Remove the feature IDs column
tax_df<- tax_sep[,-1]
# Make sampleids the rownames
rownames(tax_df) <- tax$`Feature ID`
# Make taxa table
TAX <- tax_table(tax_df)
class(TAX)
#____________________________________________
# Merge all into a phyloseq object
mouse_tutorial <- phyloseq(OTU, SAMP, TAX, phylotree)
# View components of phyloseq object
otu_table(mouse_tutorial)
sample_data(mouse_tutorial)
tax_table(mouse_tutorial)
phy_tree(mouse_tutorial)
View(sample_df)
parkinsons_dataset_filt_nolow_samps
# Load in the 'phyloseq', 'tidyverse', and 'ape' package
library(phyloseq)
library(ape)
library(tidyverse)
library(vegan)
library(picante)
#Load in the pd mouse metadata,  OTU table, taxonomy file, and phylogenetic tree
metaFP <- "parkinsons_metadata.txt"
meta <- read_delim(metaFP, delim="\t")
otuFP <- "feature-table.txt"
otu <- read_delim(file=otuFP, delim="\t", skip=1)
taxfp <- "taxonomy.tsv"
tax <- read_delim(taxfp, delim="\t")
phylotreefp <- "tree.nwk"
phylotree <- read.tree(phylotreefp)
#_____________________________________________________
# Reformatting the otu table to OTU phyloseq object
# Remove the first indexing column and save into a matrix
otu_mat <- as.matrix(otu[,-1])
# Make #OTU ID as the first column of the newly created matrix
rownames(otu_mat) <- otu$`#OTU ID`
# Use the "otu_table" function to make an OTU table
OTU <- otu_table(otu_mat, taxa_are_rows = TRUE)
class(OTU)
#_____________________________________________________
# Reformatting the meta table to SAMP phyloseq object
# Remove the first column and save into a new datafrome
sample_df <- as.data.frame(meta[,-1])
# Make #SampleID the rownames
rownames(sample_df) <- meta$`#SampleID`
# Make phyloseq sample data with sample_data() function
SAMP <- sample_data(sample_df)
class(SAMP)
#_____________________________________________________
# Separate the taxa rank columns
tax_sep <- tax %>% select(-Confidence)%>%
separate(col=Taxon, sep="; "
, into = c("Domain","Phylum","Class","Order","Family","Genus","Species")) %>%
as.matrix() # Saving as a matrix
# Remove the feature IDs column
tax_df<- tax_sep[,-1]
# Make sampleids the rownames
rownames(tax_df) <- tax$`Feature ID`
# Make taxa table
TAX <- tax_table(tax_df)
class(TAX)
#____________________________________________
# Merge all into a phyloseq object
parkinsons_dataset <- phyloseq(OTU, SAMP, TAX, phylotree)
# View components of phyloseq object
otu_table(parkinsons_dataset)
sample_data(parkinsons_dataset)
tax_table(parkinsons_dataset)
phy_tree(parkinsons_dataset)
#____________________________________________
# Filter the data
# Remove non-bacterial sequences, if any
parkinsons_dataset_filt <- subset_taxa(parkinsons_dataset,  Domain == "d__Bacteria" & Class!="c__Chloroplast" & Family !="f__Mitochondria")
# Remove ASVs that have less than 5 counts total
parkinsons_dataset_filt_nolow <- filter_taxa(parkinsons_dataset_filt, function(x) sum(x)>5, prune = TRUE)
# Remove samples with less than 100 reads
parkinsons_dataset_filt_nolow_samps <- prune_samples(sample_sums(parkinsons_dataset_filt_nolow)>100, parkinsons_dataset_filt_nolow)
# Remove samples where month is na
parkinsons_dataset_final <- subset_samples(parkinsons_dataset_filt_nolow_samps, !is.na(month) )
parkinsons_dataset_filt_nolow_samps
# Load in the 'phyloseq', 'tidyverse', and 'ape' package
library(phyloseq)
library(ape)
library(tidyverse)
library(vegan)
library(picante)
#Load in the pd mouse metadata,  OTU table, taxonomy file, and phylogenetic tree
metaFP <- "parkinsons_metadata.txt"
meta <- read_delim(metaFP, delim="\t")
otuFP <- "feature-table.txt"
otu <- read_delim(file=otuFP, delim="\t", skip=1)
taxfp <- "taxonomy.tsv"
tax <- read_delim(taxfp, delim="\t")
phylotreefp <- "tree.nwk"
phylotree <- read.tree(phylotreefp)
#_____________________________________________________
# Reformatting the otu table to OTU phyloseq object
# Remove the first indexing column and save into a matrix
otu_mat <- as.matrix(otu[,-1])
# Make #OTU ID as the first column of the newly created matrix
rownames(otu_mat) <- otu$`#OTU ID`
# Use the "otu_table" function to make an OTU table
OTU <- otu_table(otu_mat, taxa_are_rows = TRUE)
class(OTU)
#_____________________________________________________
# Reformatting the meta table to SAMP phyloseq object
# Remove the first column and save into a new datafrome
sample_df <- as.data.frame(meta[,-1])
# Make #SampleID the rownames
rownames(sample_df) <- meta$`#SampleID`
# Make phyloseq sample data with sample_data() function
SAMP <- sample_data(sample_df)
class(SAMP)
#_____________________________________________________
# Separate the taxa rank columns
tax_sep <- tax %>% select(-Confidence)%>%
separate(col=Taxon, sep="; "
, into = c("Domain","Phylum","Class","Order","Family","Genus","Species")) %>%
as.matrix() # Saving as a matrix
# Remove the feature IDs column
tax_df<- tax_sep[,-1]
# Make sampleids the rownames
rownames(tax_df) <- tax$`Feature ID`
# Make taxa table
TAX <- tax_table(tax_df)
class(TAX)
#____________________________________________
# Merge all into a phyloseq object
parkinsons_dataset <- phyloseq(OTU, SAMP, TAX, phylotree)
# View components of phyloseq object
otu_table(parkinsons_dataset)
sample_data(parkinsons_dataset)
tax_table(parkinsons_dataset)
phy_tree(parkinsons_dataset)
#____________________________________________
# Filter the data
# Remove non-bacterial sequences, if any
parkinsons_dataset_filt <- subset_taxa(parkinsons_dataset,  Domain == "d__Bacteria" & Class!="c__Chloroplast" & Family !="f__Mitochondria")
# Remove ASVs that have less than 5 counts total
parkinsons_dataset_filt_nolow <- filter_taxa(parkinsons_dataset_filt, function(x) sum(x)>5, prune = TRUE)
# Remove samples with less than 100 reads
parkinsons_dataset_filt_nolow_samps <- prune_samples(sample_sums(parkinsons_dataset_filt_nolow)>100, parkinsons_dataset_filt_nolow)
# Load in the 'phyloseq', 'tidyverse', and 'ape' package
library(phyloseq)
library(ape)
library(tidyverse)
library(vegan)
library(picante)
#Load in the pd mouse metadata,  OTU table, taxonomy file, and phylogenetic tree
metaFP <- "parkinsons_metadata.txt"
meta <- read_delim(metaFP, delim="\t")
otuFP <- "feature-table.txt"
otu <- read_delim(file=otuFP, delim="\t", skip=1)
taxfp <- "taxonomy.tsv"
tax <- read_delim(taxfp, delim="\t")
phylotreefp <- "tree.nwk"
phylotree <- read.tree(phylotreefp)
#_____________________________________________________
# Reformatting the otu table to OTU phyloseq object
# Remove the first indexing column and save into a matrix
otu_mat <- as.matrix(otu[,-1])
# Make #OTU ID as the first column of the newly created matrix
rownames(otu_mat) <- otu$`#OTU ID`
# Use the "otu_table" function to make an OTU table
OTU <- otu_table(otu_mat, taxa_are_rows = TRUE)
class(OTU)
#_____________________________________________________
# Reformatting the meta table to SAMP phyloseq object
# Remove the first column and save into a new datafrome
sample_df <- as.data.frame(meta[,-1])
# Make #SampleID the rownames
rownames(sample_df) <- meta$`#SampleID`
# Make phyloseq sample data with sample_data() function
SAMP <- sample_data(sample_df)
class(SAMP)
#_____________________________________________________
# Separate the taxa rank columns
tax_sep <- tax %>% select(-Confidence)%>%
separate(col=Taxon, sep="; "
, into = c("Domain","Phylum","Class","Order","Family","Genus","Species")) %>%
as.matrix() # Saving as a matrix
# Remove the feature IDs column
tax_df<- tax_sep[,-1]
# Make sampleids the rownames
rownames(tax_df) <- tax$`Feature ID`
# Make taxa table
TAX <- tax_table(tax_df)
class(TAX)
#____________________________________________
# Merge all into a phyloseq object
parkinsons_dataset <- phyloseq(OTU, SAMP, TAX, phylotree)
# View components of phyloseq object
otu_table(parkinsons_dataset)
sample_data(parkinsons_dataset)
tax_table(parkinsons_dataset)
phy_tree(parkinsons_dataset)
#____________________________________________
# Filter the data
# Remove non-bacterial sequences, if any
parkinsons_dataset_filt <- subset_taxa(parkinsons_dataset,  Domain == "d__Bacteria" & Class!="c__Chloroplast" & Family !="f__Mitochondria")
# Remove ASVs that have less than 5 counts total
parkinsons_dataset_filt_nolow <- filter_taxa(parkinsons_dataset_filt, function(x) sum(x)>5, prune = TRUE)
# Remove samples with less than 100 reads
parkinsons_dataset_final <- prune_samples(sample_sums(parkinsons_dataset_filt_nolow)>100, parkinsons_dataset_filt_nolow)
# Load in the 'phyloseq', 'tidyverse', and 'ape' package
library(phyloseq)
library(ape)
library(tidyverse)
library(vegan)
library(picante)
#Load in the pd mouse metadata,  OTU table, taxonomy file, and phylogenetic tree
metaFP <- "parkinsons_metadata.txt"
meta <- read_delim(metaFP, delim="\t")
otuFP <- "feature-table.txt"
otu <- read_delim(file=otuFP, delim="\t", skip=1)
taxfp <- "taxonomy.tsv"
tax <- read_delim(taxfp, delim="\t")
phylotreefp <- "tree.nwk"
phylotree <- read.tree(phylotreefp)
#_____________________________________________________
# Reformatting the otu table to OTU phyloseq object
# Remove the first indexing column and save into a matrix
otu_mat <- as.matrix(otu[,-1])
# Make #OTU ID as the first column of the newly created matrix
rownames(otu_mat) <- otu$`#OTU ID`
# Use the "otu_table" function to make an OTU table
OTU <- otu_table(otu_mat, taxa_are_rows = TRUE)
class(OTU)
#_____________________________________________________
# Reformatting the meta table to SAMP phyloseq object
# Remove the first column and save into a new datafrome
sample_df <- as.data.frame(meta[,-1])
# Make #SampleID the rownames
rownames(sample_df) <- meta$`#SampleID`
# Make phyloseq sample data with sample_data() function
SAMP <- sample_data(sample_df)
class(SAMP)
#_____________________________________________________
# Separate the taxa rank columns
tax_sep <- tax %>% select(-Confidence)%>%
separate(col=Taxon, sep="; "
, into = c("Domain","Phylum","Class","Order","Family","Genus","Species")) %>%
as.matrix() # Saving as a matrix
# Remove the feature IDs column
tax_df<- tax_sep[,-1]
# Make sampleids the rownames
rownames(tax_df) <- tax$`Feature ID`
# Make taxa table
TAX <- tax_table(tax_df)
class(TAX)
#____________________________________________
# Merge all into a phyloseq object
parkinsons_dataset <- phyloseq(OTU, SAMP, TAX, phylotree)
# View components of phyloseq object
otu_table(parkinsons_dataset)
sample_data(parkinsons_dataset)
tax_table(parkinsons_dataset)
phy_tree(parkinsons_dataset)
#____________________________________________
# Filter the data
# Remove non-bacterial sequences, if any
parkinsons_dataset_filt <- subset_taxa(parkinsons_dataset,  Domain == "d__Bacteria" & Class!="c__Chloroplast" & Family !="f__Mitochondria")
# Remove ASVs that have less than 5 counts total
parkinsons_dataset_filt_nolow <- filter_taxa(parkinsons_dataset_filt, function(x) sum(x)>5, prune = TRUE)
# Remove samples with less than 100 reads
parkinsons_dataset_final <- prune_samples(sample_sums(parkinsons_dataset_filt_nolow)>100, parkinsons_dataset_filt_nolow)
#____________________________________________
# Rarefy sample
# rngseed sets a random number
# Set rngseed to have a reproducible analysis
# t transposes the table to use rarecurve function
# cex decreases font size
parkinsons_dataset_rare <- rarefy_even_depth(mpt_final, rngseed = 1, sample.size = 1000)
#____________________________________________
# Rarefy sample
# rngseed sets a random number
# Set rngseed to have a reproducible analysis
# t transposes the table to use rarecurve function
# cex decreases font size
parkinsons_dataset_rare <- rarefy_even_depth(parkinsons_dataset_final, rngseed = 1, sample.size = 1000)
# Save original phyloseq object
save(parkinsons_dataset, file="parkinsons_dataset.RData")
# Save processed phyloseq object
save(parkinsons_dataset_final, file="parkinsons_dataset_final.RData")
save(parkinsons_dataset_rare, file="parkinsons_dataset_rare.RData")
